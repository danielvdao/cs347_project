drop view nl_list ;
drop view nl_admin ; 
drop view nl_employee ; 
drop view nl_member_employee ; 


create view nl_member_employee as 
SELECT MEMBER_ID, TYPE, NL_USERS_USER_ID
FROM nl_member ;

create or replace TRIGGER nl_member_employee_trigger
     INSTEAD OF insert ON nl_member_employee
     FOR EACH ROW
BEGIN
     insert into nl_member(
        MEMBER_ID, 
        TYPE, 
        NL_USERS_USER_ID
        )
     VALUES (
        :new.MEMBER_ID, 
        'Employee', 
        :new.NL_USERS_USER_ID
        );
END;
/

create view nl_employee as 
SELECT USER_ID, EMPLOYEE_NAME, ADMIN, EMPLOYEE_LAB, EMPLOYEE_DIVISION, EMPLOYEE_STATUS, STATUS_EFF_DATE
FROM nl_users ;

create or replace TRIGGER nl_employee_trigger
     INSTEAD OF insert ON nl_employee
     FOR EACH ROW
BEGIN
     insert into nl_users(
        USER_ID, 
        EMPLOYEE_NAME, 
        ADMIN, 
        EMPLOYEE_LAB, 
        EMPLOYEE_DIVISION, 
        EMPLOYEE_STATUS, 
        STATUS_EFF_DATE 
        )
     VALUES (
        :new.USER_ID, 
        :new.EMPLOYEE_NAME, 
        'N', 
        :new.EMPLOYEE_LAB, 
        :new.EMPLOYEE_DIVISION, 
        :new.EMPLOYEE_STATUS, 
        :new.STATUS_EFF_DATE 
        );
END;
/

create view nl_admin as 
SELECT USER_ID, EMPLOYEE_NAME, ADMIN, EMPLOYEE_LAB, EMPLOYEE_DIVISION, EMPLOYEE_STATUS, STATUS_EFF_DATE
FROM nl_users
WHERE ADMIN = 'Y' ;

create or replace TRIGGER nl_admin_trigger
     INSTEAD OF insert ON nl_admin
     FOR EACH ROW
BEGIN
     insert into nl_users(
        USER_ID, 
        EMPLOYEE_NAME, 
        ADMIN, 
        EMPLOYEE_LAB, 
        EMPLOYEE_DIVISION, 
        EMPLOYEE_STATUS, 
        STATUS_EFF_DATE
        )
     VALUES (
        :new.USER_ID, 
        :new.EMPLOYEE_NAME, 
        'Y', 
        :new.EMPLOYEE_LAB, 
        :new.EMPLOYEE_DIVISION, 
        :new.EMPLOYEE_STATUS, 
        :new.STATUS_EFF_DATE 
        );
END;
/


create view nl_list as 
SELECT MEMBER_ID, TYPE, NAME, OWNERSHIP_DIV_CODE, LIST_DESCRIPTION, EXTERNAL_VIEW_NAME, CREATION_DATE, LIST_STATUS, STATUS_EFF_DATE, DATE_ADDED
FROM nl_member
WHERE TYPE = 'List' ;

create or replace TRIGGER nl_list_trigger
     INSTEAD OF insert ON nl_list
     FOR EACH ROW
BEGIN
     insert into nl_member(
        MEMBER_ID,
        TYPE, 
        NAME, 
        OWNERSHIP_DIV_CODE, 
        LIST_DESCRIPTION, 
        EXTERNAL_VIEW_NAME, 
        CREATION_DATE, 
        LIST_STATUS, 
        STATUS_EFF_DATE, 
        DATE_ADDED
        )
     VALUES (
        :new.MEMBER_ID,
        'List', 
        :new.NAME, 
        :new.OWNERSHIP_DIV_CODE, 
        :new.LIST_DESCRIPTION, 
        :new.EXTERNAL_VIEW_NAME, 
        :new.CREATION_DATE, 
        :new.LIST_STATUS, 
        :new.STATUS_EFF_DATE, 
        :new.DATE_ADDED 
        );
END;
/
